{"ast":null,"code":"var _jsxFileName = \"/home/yura/teachua/teachua-frontend-YuraM8/src/components/map/MapContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleMap, InfoWindow, Marker, MarkerClusterer, useLoadScript } from \"@react-google-maps/api\";\nimport MarkItem from \"./MarkItem\";\nimport { ROOT_URI } from \"../../config/ApplicationConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContainer = ({\n  mapClubs,\n  zoom,\n  setZoom,\n  selected,\n  setSelected,\n  center,\n  setCenter\n}) => {\n  _s();\n  const [map, setMap] = useState(null);\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyBdEOt1rGu5B5h5-wpS4WnTA5gD7-O6R30'\n  });\n  if (loadError) return \"Error loading map\";\n  if (!isLoaded) return \"Map is loading\";\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"100%\"\n  };\n  const option = {\n    disableDefaultUI: true,\n    zoomControl: true\n  };\n  const changeZoom = () => {\n    if (map != null) {\n      setZoom(map.zoom);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: zoom,\n    onLoad: map => {\n      setMap(map);\n    },\n    center: center,\n    options: option,\n    onZoomChanged: changeZoom,\n    children: [/*#__PURE__*/_jsxDEV(MarkerClusterer, {\n      onClusteringEnd: clusters => {\n        clusters.clusters.map(cluster => {\n          cluster.clusterIcon.styles = [{\n            url: `${ROOT_URI}/static/images/map/cluster.png`,\n            height: 58,\n            width: 67,\n            textColor: '#FFFFFF',\n            textSize: 18\n          }];\n        });\n      },\n      children: cluster => mapClubs.content.map(club => /*#__PURE__*/_jsxDEV(Marker, {\n        id: club.id,\n        position: {\n          lat: club.latitude,\n          lng: club.longitude\n        },\n        clusterer: cluster,\n        onClick: () => {\n          setSelected(club);\n          setZoom(15);\n          setCenter({\n            lat: club.latitude,\n            lng: club.longitude\n          });\n        },\n        icon: {\n          url: `${ROOT_URI}/static/images/map/location.png`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), selected && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: selected.latitude,\n        lng: selected.longitude\n      },\n      onCloseClick: () => {\n        setSelected(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(MarkItem, {\n        mapClub: selected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(MapContainer, \"1icQLn6lxnqk7GPAfVrG/OZaL2w=\", false, function () {\n  return [useLoadScript];\n});\n_c = MapContainer;\nexport default MapContainer;\nvar _c;\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"names":["React","useState","GoogleMap","InfoWindow","Marker","MarkerClusterer","useLoadScript","MarkItem","ROOT_URI","jsxDEV","_jsxDEV","MapContainer","mapClubs","zoom","setZoom","selected","setSelected","center","setCenter","_s","map","setMap","isLoaded","loadError","googleMapsApiKey","mapContainerStyle","width","height","option","disableDefaultUI","zoomControl","changeZoom","onLoad","options","onZoomChanged","children","onClusteringEnd","clusters","cluster","clusterIcon","styles","url","textColor","textSize","content","club","id","position","lat","latitude","lng","longitude","clusterer","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","onCloseClick","mapClub","_c","$RefreshReg$"],"sources":["/home/yura/teachua/teachua-frontend-YuraM8/src/components/map/MapContainer.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {GoogleMap, InfoWindow, Marker, MarkerClusterer, useLoadScript} from \"@react-google-maps/api\";\r\nimport MarkItem from \"./MarkItem\";\r\nimport {ROOT_URI} from \"../../config/ApplicationConfig\";\r\n\r\nconst MapContainer = ({mapClubs, zoom, setZoom, selected, setSelected, center, setCenter}) => {\r\n    const [map, setMap] = useState(null);\r\n\r\n    const {isLoaded, loadError} = useLoadScript({\r\n        googleMapsApiKey: 'AIzaSyBdEOt1rGu5B5h5-wpS4WnTA5gD7-O6R30'\r\n    });\r\n\r\n    if (loadError) return \"Error loading map\";\r\n    if (!isLoaded) return \"Map is loading\";\r\n\r\n    const mapContainerStyle = {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    };\r\n\r\n    const option = {\r\n        disableDefaultUI: true,\r\n        zoomControl: true\r\n    };\r\n\r\n    const changeZoom = () => {\r\n        if (map != null) {\r\n            setZoom(map.zoom);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <GoogleMap\r\n            mapContainerStyle={mapContainerStyle}\r\n            zoom={zoom}\r\n            onLoad={map => {setMap(map);}}\r\n            center={center}\r\n            options={option}\r\n            onZoomChanged={changeZoom}>\r\n            <MarkerClusterer\r\n                onClusteringEnd={(clusters) => {\r\n                    clusters.clusters.map((cluster) => {\r\n                        cluster.clusterIcon.styles = [{\r\n                            url: `${ROOT_URI}/static/images/map/cluster.png`,\r\n                            height: 58,\r\n                            width: 67,\r\n                            textColor: '#FFFFFF',\r\n                            textSize: 18,\r\n                        }];\r\n                    })\r\n                }}>\r\n                {(cluster) =>\r\n                    mapClubs.content.map(club => (\r\n                            <Marker\r\n                                id={club.id}\r\n                                position={{\r\n                                    lat: club.latitude,\r\n                                    lng: club.longitude\r\n                                }}\r\n                                clusterer={cluster}\r\n                                onClick={() => {\r\n                                    setSelected(club);\r\n                                    setZoom(15);\r\n                                    setCenter({\r\n                                        lat: club.latitude,\r\n                                        lng: club.longitude\r\n                                    })\r\n                                }}\r\n                                icon={{url: `${ROOT_URI}/static/images/map/location.png`}}/>\r\n                        )\r\n                    )}\r\n            </MarkerClusterer>\r\n\r\n            {selected && (\r\n                <InfoWindow position={{lat: selected.latitude, lng: selected.longitude}}\r\n                            onCloseClick={() => {\r\n                                setSelected(null);\r\n                            }}>\r\n                    <MarkItem mapClub={selected}/>\r\n                </InfoWindow>)}\r\n        </GoogleMap>\r\n    )\r\n\r\n}\r\n\r\nexport default MapContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}