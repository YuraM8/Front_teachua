{"ast":null,"code":"var _jsxFileName = \"/home/yura/teachua/teachua-frontend-YuraM8/src/components/ImageCarousel.js\",\n  _s = $RefreshSig$();\nimport { Image } from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport './css/ImageCarousel.css';\nimport LeftOutlined from \"@ant-design/icons/lib/icons/LeftOutlined\";\nimport RightOutlined from \"@ant-design/icons/lib/icons/RightOutlined\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCarousel = ({\n  urls\n}) => {\n  _s();\n  const [carouselWidth, setCarouselWidth] = useState(0);\n  let carouselPosition = 0;\n  useEffect(() => {\n    setCarouselWidth(carousel().scrollWidth);\n  }, []);\n  const carousel = () => {\n    let element = document.getElementById(\"carousel\");\n    return {\n      scrollWidth: element.scrollWidth,\n      clientWidth: element.clientWidth,\n      step: (carouselWidth - element.clientWidth) / urls.length\n    };\n  };\n  const nextImage = () => {\n    carouselPosition = carouselPosition >= carouselWidth - carousel().clientWidth ? 0 : carouselPosition + carousel().step;\n    moveSlider();\n  };\n  const prevImage = () => {\n    carouselPosition = carouselPosition <= 0 ? carouselWidth - carousel().clientWidth : carouselPosition - carousel().step;\n    moveSlider();\n  };\n  const moveSlider = () => {\n    for (const img of document.getElementsByClassName(\"ant-image\")) {\n      img.style.transform = `translateX(${-carouselPosition}px)`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"carousel-box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel\",\n      id: \"carousel\",\n      children: [/*#__PURE__*/_jsxDEV(LeftOutlined, {\n        className: \"arrow previous\",\n        onClick: prevImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Image.PreviewGroup, {\n        children: urls.map(url => /*#__PURE__*/_jsxDEV(Image, {\n          className: \"carousel-cell\",\n          src: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RightOutlined, {\n        className: \"arrow next\",\n        onClick: nextImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageCarousel, \"U7In760WFTQ79Xvs/I0jN62Uzg4=\");\n_c = ImageCarousel;\nImageCarousel.propTypes = {\n  urls: PropTypes.array.isRequired\n};\nexport default ImageCarousel;\nvar _c;\n$RefreshReg$(_c, \"ImageCarousel\");","map":{"version":3,"names":["Image","React","useState","useEffect","LeftOutlined","RightOutlined","PropTypes","jsxDEV","_jsxDEV","ImageCarousel","urls","_s","carouselWidth","setCarouselWidth","carouselPosition","carousel","scrollWidth","element","document","getElementById","clientWidth","step","length","nextImage","moveSlider","prevImage","img","getElementsByClassName","style","transform","id","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","PreviewGroup","map","url","src","_c","propTypes","array","isRequired","$RefreshReg$"],"sources":["/home/yura/teachua/teachua-frontend-YuraM8/src/components/ImageCarousel.js"],"sourcesContent":["import {Image} from \"antd\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport './css/ImageCarousel.css';\r\nimport LeftOutlined from \"@ant-design/icons/lib/icons/LeftOutlined\";\r\nimport RightOutlined from \"@ant-design/icons/lib/icons/RightOutlined\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageCarousel = ({urls}) => {\r\n    const [carouselWidth, setCarouselWidth] = useState(0);\r\n    let carouselPosition = 0;\r\n\r\n    useEffect(() => {\r\n        setCarouselWidth(carousel().scrollWidth);\r\n    }, []);\r\n\r\n    const carousel = () => {\r\n        let element = document.getElementById(\"carousel\");\r\n        return {\r\n            scrollWidth: element.scrollWidth,\r\n            clientWidth: element.clientWidth,\r\n            step: (carouselWidth - element.clientWidth) / urls.length\r\n        }\r\n    };\r\n\r\n    const nextImage = () => {\r\n        carouselPosition = carouselPosition >= (carouselWidth - carousel().clientWidth) ? 0 : (carouselPosition + carousel().step);\r\n        moveSlider();\r\n    };\r\n\r\n    const prevImage = () => {\r\n        carouselPosition = carouselPosition <= 0 ? carouselWidth - carousel().clientWidth : (carouselPosition - carousel().step);\r\n        moveSlider();\r\n    };\r\n\r\n    const moveSlider = () => {\r\n        for (const img of document.getElementsByClassName(\"ant-image\")) {\r\n            img.style.transform = `translateX(${-carouselPosition}px)`;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id=\"carousel-box\">\r\n            <div className=\"carousel\" id=\"carousel\">\r\n                <LeftOutlined className=\"arrow previous\" onClick={prevImage}/>\r\n                <Image.PreviewGroup>\r\n                    {\r\n                        urls.map(url => <Image className=\"carousel-cell\" src={url}/>)\r\n                    }\r\n                </Image.PreviewGroup>\r\n                <RightOutlined className=\"arrow next\" onClick={nextImage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nImageCarousel.propTypes = {\r\n    urls: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ImageCarousel;"],"mappings":";;AAAA,SAAQA,KAAK,QAAO,MAAM;AAC1B,OAAOC,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAO,yBAAyB;AAChC,OAAOC,YAAY,MAAM,0CAA0C;AACnE,OAAOC,aAAa,MAAM,2CAA2C;AACrE,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,aAAa,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACrD,IAAIY,gBAAgB,GAAG,CAAC;EAExBX,SAAS,CAAC,MAAM;IACZU,gBAAgB,CAACE,QAAQ,CAAC,CAAC,CAACC,WAAW,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,QAAQ,GAAGA,CAAA,KAAM;IACnB,IAAIE,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;IACjD,OAAO;MACHH,WAAW,EAAEC,OAAO,CAACD,WAAW;MAChCI,WAAW,EAAEH,OAAO,CAACG,WAAW;MAChCC,IAAI,EAAE,CAACT,aAAa,GAAGK,OAAO,CAACG,WAAW,IAAIV,IAAI,CAACY;IACvD,CAAC;EACL,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpBT,gBAAgB,GAAGA,gBAAgB,IAAKF,aAAa,GAAGG,QAAQ,CAAC,CAAC,CAACK,WAAY,GAAG,CAAC,GAAIN,gBAAgB,GAAGC,QAAQ,CAAC,CAAC,CAACM,IAAK;IAC1HG,UAAU,CAAC,CAAC;EAChB,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpBX,gBAAgB,GAAGA,gBAAgB,IAAI,CAAC,GAAGF,aAAa,GAAGG,QAAQ,CAAC,CAAC,CAACK,WAAW,GAAIN,gBAAgB,GAAGC,QAAQ,CAAC,CAAC,CAACM,IAAK;IACxHG,UAAU,CAAC,CAAC;EAChB,CAAC;EAED,MAAMA,UAAU,GAAGA,CAAA,KAAM;IACrB,KAAK,MAAME,GAAG,IAAIR,QAAQ,CAACS,sBAAsB,CAAC,WAAW,CAAC,EAAE;MAC5DD,GAAG,CAACE,KAAK,CAACC,SAAS,GAAI,cAAa,CAACf,gBAAiB,KAAI;IAC9D;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKsB,EAAE,EAAC,cAAc;IAAAC,QAAA,eAClBvB,OAAA;MAAKwB,SAAS,EAAC,UAAU;MAACF,EAAE,EAAC,UAAU;MAAAC,QAAA,gBACnCvB,OAAA,CAACJ,YAAY;QAAC4B,SAAS,EAAC,gBAAgB;QAACC,OAAO,EAAER;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC9D7B,OAAA,CAACR,KAAK,CAACsC,YAAY;QAAAP,QAAA,EAEXrB,IAAI,CAAC6B,GAAG,CAACC,GAAG,iBAAIhC,OAAA,CAACR,KAAK;UAACgC,SAAS,EAAC,eAAe;UAACS,GAAG,EAAED;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjD,CAAC,eACrB7B,OAAA,CAACH,aAAa;QAAC2B,SAAS,EAAC,YAAY;QAACC,OAAO,EAAEV;MAAU;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA9CIF,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAgDnBA,aAAa,CAACkC,SAAS,GAAG;EACtBjC,IAAI,EAAEJ,SAAS,CAACsC,KAAK,CAACC;AAC1B,CAAC;AAED,eAAepC,aAAa;AAAC,IAAAiC,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}